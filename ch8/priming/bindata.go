// Code generated by go-bindata. DO NOT EDIT.
// sources:
// twout_all.tsv
// twout_a.tsv
// twout_b.tsv
// trained.wts

package main


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTwoutalltsv = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x96\xc1\x4e\xe3\x30\x10\x86\xcf\xe9\x73\xec\xde\x7a\xf0\xcc\x38\xdd" +
	"\x25\x42\x9c\x38\xc0\x05\x1e\x00\x55\x51\x2d\x71\x04\x71\x68\xdf\x1f\x91\xda\xa9\x7f\x8f\x9d\x38\x46\x95\xaa\xfc" +
	"\x71\xfc\xfd\x9e\x19\x7b\x92\xf1\x69\xe8\xfe\xbc\x9c\x3e\xde\xbb\xbf\xcf\x9f\x5f\x97\xf3\x1b\x0f\x66\x6f\x8e\xf7" +
	"\x3c\xf4\xfb\xfe\x21\xbe\x49\xc7\x58\x31\x28\x01\x65\x23\x45\x7b\x03\x8a\x40\x31\x28\x01\x15\x53\x18\x28\x0c\x14" +
	"\x06\x0a\x03\x85\x81\x22\x40\x11\xa0\x08\x50\x04\x28\x02\x14\x0b\x14\x0b\x14\x0b\x14\x0b\x14\x3b\x51\x5e\x2f\xe7" +
	"\x4c\x96\xa3\xbb\x84\x0f\x31\x4a\x41\x09\xc4\x6b\xaa\x23\x49\x28\x19\xa5\xa0\x04\x14\x23\x8a\x11\xc5\x88\x62\x44" +
	"\x31\xa2\x04\x51\x82\x28\x41\x94\x20\x4a\x10\x65\x11\x65\x11\x65\x11\x65\x11\xf5\x93\xfd\xdd\xf8\x38\x74\x66\x3c" +
	"\x75\xa6\xa3\xce\xc0\x8f\xfc\x3f\x4d\x57\xe9\xa8\x81\xfb\x04\x73\x4c\xf6\x79\xe3\xbd\x5c\x83\xd7\xed\x29\x2a\xcc" +
	"\x4b\x46\x26\x2f\x9a\xe2\x2a\x3d\x9f\x9d\xa7\x22\xa4\xac\x23\x28\xef\xe5\x1a\xbc\xa8\xea\x9a\x12\x2f\x9e\xe3\xa2" +
	"\xe2\xac\x5b\xbe\xf2\xf1\x55\xac\xce\x7b\xb9\x5f\x78\xa5\x77\xf5\x3e\xf1\x6a\xf2\x92\xf1\x94\xdd\x67\x69\x4d\xf2" +
	"\x6b\x59\x8b\x74\xd6\xde\xcb\x35\x79\x6d\xcc\xc4\xe4\x65\xfd\xf9\x5a\x3f\x25\x54\x18\x5d\xaa\xe4\xbc\x26\xef\xe5" +
	"\x9a\xbc\x4a\x99\xd3\x19\xa1\x39\x87\x7d\x52\xaf\xaa\x1d\x8c\x9c\x85\x8a\x61\xbd\xfa\xa4\x5e\xf5\x5e\x3a\x73\xa5" +
	"\x5d\x19\xea\x75\x88\xfa\x61\xf5\xae\x5a\x89\x84\x92\x79\xa1\x5e\x87\xa8\x1f\xb6\x7a\x51\x29\x9a\x64\x1f\xfe\x53" +
	"\xe7\x2b\xe7\xa8\x77\xf7\xc6\x6e\xed\xbd\xd2\xf3\x55\xe7\x55\x3e\x03\xfa\x3a\xf4\x8d\xff\x99\x3e\xbf\x9a\x91\xed" +
	"\xab\xf3\x5e\xba\xcf\xaf\x7b\xc5\x6b\x5e\x7d\x9f\xcc\x71\xdd\xa9\xb8\x34\x4d\xd7\x61\xe9\x5c\xe7\x72\x4b\xde\x2b" +
	"\x8d\xab\xc6\x6b\xa9\x8e\x7a\x24\xc4\x45\x26\x7a\x81\x95\x52\x90\x1f\xc9\xb5\xa3\x62\x13\x0b\x66\xae\xd1\x4c\xe7" +
	"\x20\x8d\x2b\x32\xbf\x9a\xc5\x9f\x1c\xd5\x49\xd9\x9e\xf8\x60\xe6\x9a\xcc\xf2\xf6\xc5\xab\xab\x59\xf8\xe8\xa0\xe4" +
	"\x5f\xb7\xdb\x14\xb1\xe9\x55\x14\xcc\x5c\x93\xd9\xc6\x19\xbb\xef\x00\x00\x00\xff\xff\xcf\x29\x69\x0c\xeb\x0d\x00" +
	"\x00")

func bindataTwoutalltsvBytes() ([]byte, error) {
	return bindataRead(
		_bindataTwoutalltsv,
		"twout_all.tsv",
	)
}



func bindataTwoutalltsv() (*asset, error) {
	bytes, err := bindataTwoutalltsvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "twout_all.tsv",
		size: 3563,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1572912961, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTwoutatsv = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xbb\x4e\xf4\x30\x10\x85\x6b\xef\x73\xfc\x7f\xb7\x85\x67\xc6\xcb" +
	"\x25\x42\x54\x14\xd0\xc0\x03\xa0\x55\xb4\x05\x25\x88\x62\xf7\xfd\x11\xce\x12\xf9\xb3\x27\x37\x45\x8a\x72\x9c\xe4" +
	"\x3b\xe3\x63\x8f\xfb\xe7\x2e\xfc\x7b\x3d\x7d\x7e\x84\xff\x2f\x5f\xdf\x97\xf3\xbb\x76\x71\x1f\x8f\x0f\xda\x1d\xf6" +
	"\x87\xc7\x72\x50\x8e\xa5\x52\x28\x83\x4a\x85\x92\x7d\x84\x12\x28\x85\x32\xa8\x92\xa2\xa0\x28\x28\x0a\x8a\x82\xa2" +
	"\xa0\x18\x28\x06\x8a\x81\x62\xa0\x18\x28\x09\x94\x04\x4a\x02\x25\x81\x92\x32\xe5\xed\x72\x76\x52\x2e\x46\x85\x1f" +
	"\x29\xa5\x51\x82\x38\x44\x5d\x48\xa1\x54\x4a\xa3\x04\x4a\x89\x52\xa2\x94\x28\x25\x4a\x89\x32\xa2\x8c\x28\x23\xca" +
	"\x88\x32\xa2\x12\x51\x89\xa8\x44\x54\x22\xea\x37\xfd\x5d\xff\xd4\x85\xd8\x9f\x42\x0c\x12\x22\x2e\xb9\xde\x25\x3f" +
	"\xd5\x6f\x23\xc6\x05\xff\x44\xf7\xfb\x98\xbd\x24\x7b\xf9\x3e\x35\xd5\xbb\x64\xac\xa8\x26\x40\x65\x2f\x1d\xbd\xf8" +
	"\x87\x37\xd3\x9a\xb9\xa1\xba\xec\x65\xfd\xc9\xcd\xc8\x4b\xac\xad\x65\xc9\x7d\xd4\xd9\x2b\x5d\xd7\x6b\x39\x75\x99" +
	"\x78\x3b\x37\xe3\xb1\xd6\xec\x75\xa8\xe6\x35\xfd\xdc\xd4\x3a\xbb\x96\x55\x32\xd9\xeb\xa6\xd8\x87\xab\x13\x59\xa0" +
	"\x4b\x93\xf3\xe0\x75\xdb\xac\x97\xe7\xd8\xae\xd5\xc6\x2e\xc9\x5e\x77\xce\x9e\x97\x89\x39\x78\xab\xba\xb2\xba\xec" +
	"\x75\xdf\x78\xd5\xd5\x8a\x53\xef\x5c\xcf\x79\x7b\x68\xf0\x92\x58\x34\x98\xdb\x86\x6e\x2c\xde\x48\xdb\xd4\x75\x88" +
	"\x52\x9e\x1c\xd3\xfd\x3c\x95\xeb\xea\x2c\x06\xb3\xbf\xa3\x43\xaa\x7b\xbd\xfd\x6a\xa3\x8d\x4d\xb9\xfb\x09\x00\x00" +
	"\xff\xff\x20\x99\xe7\x8e\x6c\x08\x00\x00")

func bindataTwoutatsvBytes() ([]byte, error) {
	return bindataRead(
		_bindataTwoutatsv,
		"twout_a.tsv",
	)
}



func bindataTwoutatsv() (*asset, error) {
	bytes, err := bindataTwoutatsvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "twout_a.tsv",
		size: 2156,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1572850375, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTwoutbtsv = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xcb\x4e\xf3\x30\x10\x85\xd7\xee\x73\xfc\xff\x2e\x0b\xcf\x25\x5c" +
	"\x22\xc4\x8a\x05\x6c\xe0\x01\x50\x15\x51\x89\x25\x88\x45\xfb\xfe\x08\x27\x69\xe7\xd8\x33\x24\xa8\x52\xe5\xe3\x78" +
	"\xbe\x33\x9e\xb1\x3d\x3e\x0e\xe9\xdf\xf3\xdb\xc7\x7b\xfa\xff\xf4\xf9\x75\x3a\xbe\xf2\x90\xbb\xbc\xbf\xe3\xa1\xef" +
	"\xfa\x7b\x3b\x49\x7b\xab\x18\x94\x80\x52\xa3\xa8\xcb\xa0\x08\x14\x83\x12\x50\x96\xc2\x40\x61\xa0\x30\x50\x18\x28" +
	"\x0c\x14\x01\x8a\x00\x45\x80\x22\x40\x11\xa0\x28\x50\x14\x28\x0a\x14\x05\x8a\x16\xca\xcb\xe9\xe8\x54\xd9\xcc\x12" +
	"\x2e\x62\x94\x82\x12\x88\x53\xa9\x8d\x24\x94\x8c\x52\x50\x02\x8a\x11\xc5\x88\x62\x44\x31\xa2\x18\x51\x82\x28\x41" +
	"\x94\x20\x4a\x10\x25\x88\x52\x44\x29\xa2\x14\x51\x8a\xa8\x9f\xea\xef\xc6\x87\x21\xe5\xf1\x90\x72\xa2\x94\xe1\x47" +
	"\xf3\x3f\x95\x51\xfd\xd5\xae\xa2\x20\xae\xfa\x52\xbc\xa8\x78\x45\xeb\xdd\xb8\x4a\xc7\x63\xba\xcc\x15\x2f\x3e\x7b" +
	"\x51\x18\x75\xd9\xc3\xda\x2c\xb9\xd1\x34\x7b\xc9\x78\x70\x6a\x54\xaf\x8d\x9c\x36\x67\x57\xbc\x74\xee\x57\x9b\x91" +
	"\x1f\xeb\x77\x2e\xee\xdf\x9c\x67\xf1\xea\xab\x7d\x6d\xaa\xbe\xbb\xaf\xb8\xa2\xcb\xbe\xae\xcc\x39\x6c\xab\x64\x63" +
	"\x7e\xdb\x71\xe0\x50\xd5\xf0\xba\xe9\x97\xe7\xe8\x75\x86\x42\xff\x7a\xbc\x9c\x8d\x1b\xe7\xcc\xaf\x66\x19\xd4\xac" +
	"\xdd\xf3\x39\xab\xe2\x75\xdb\x78\xb5\xb4\xf8\x56\xc7\x27\xb1\xca\x77\xba\xcb\xd9\x5c\xb0\xcd\xcf\xc0\xdf\xaf\xc9" +
	"\x64\x66\x5f\x8e\xcd\x79\x86\x27\x2e\x1c\x4d\x66\xcb\xd3\x41\x6e\xe3\xd7\x9f\xa7\x8d\x11\xbb\xef\x00\x00\x00\xff" +
	"\xff\xd2\xe7\x6c\x50\x6c\x08\x00\x00")

func bindataTwoutbtsvBytes() ([]byte, error) {
	return bindataRead(
		_bindataTwoutbtsv,
		"twout_b.tsv",
	)
}



func bindataTwoutbtsv() (*asset, error) {
	bytes, err := bindataTwoutbtsvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "twout_b.tsv",
		size: 2156,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1572850375, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTrainedwts = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x9d\x49\x8b\xa6\xf9\xb1\xdd\xd7\x55\x9f\x22\xa9\x75\xd2\xc4\xf0\x9f" +
	"\xa2\x77\x17\x8c\x07\xf0\xbd\x16\xbe\x0b\x2f\x84\x16\xcd\x55\x23\xda\x96\x5a\xa6\xdd\xb2\x31\x42\xdf\xdd\x64\xc6" +
	"\xef\x3c\x5d\x55\x6e\x9c\xaf\x30\x98\x27\x4d\x2f\xb2\xf3\xcd\x77\xaa\xff\x10\xc3\x39\x27\x22\xfe\xfa\xf1\xc3\xa7" +
	"\x7f\xfa\xfe\xe7\xff\xf1\xe7\x9f\xfe\xcb\xa7\x6f\x9f\x3e\xfd\xe6\xa7\x1f\xfe\xf4\xc3\x8f\x7f\xf8\xf4\xfc\xf1\xc3" +
	"\xa7\x7f\xff\xdd\xff\xfc\xfe\xa7\xff\xf6\xe9\xdb\xa7\xdf\x7e\xfc\xf0\xe1\xaf\x1f\x3f\x7c\xe0\xa1\x97\xe7\xfd\xbb" +
	"\x1f\xff\xeb\x5f\x7e\x7e\x79\xd6\x87\x0f\x9f\xfe\xf1\xfb\x9f\xbf\xfb\x57\xdf\xfd\xfc\xdd\xa7\x6f\x9f\x5e\x9f\xf5" +
	"\xe1\xd3\x3f\xfc\xcb\xcf\xff\xf8\x0f\xff\xfd\x0f\x2f\x4f\xb4\x6f\x22\x8e\x99\xed\xec\x67\xbf\xfe\xf1\x37\xff\xfb" +
	"\x1f\x5f\xfe\xf6\xb7\x7e\xbf\xdf\xfc\xf4\x9f\x7f\x7c\xf9\xd8\x1f\xff\xf2\xc7\x3f\x7e\xe4\xd1\xaf\x3e\xfe\xdf\xfe" +
	"\xf0\xfb\xdf\x7f\xff\xe3\x63\x9f\xef\xa7\x66\x79\xed\x5f\xfd\x7c\x3f\xb5\x4e\xec\xf9\x6b\x9f\xff\xdb\xd7\xe7\xf7" +
	"\x5b\x7e\xf8\xf4\xaf\x7f\xfa\xf3\x9f\xbe\xfa\x97\xff\xda\x67\x7f\xf8\xf0\xe9\xdf\xfc\xf3\xbf\x7c\xf7\xc7\xef\x79" +
	"\xff\xf9\xfa\xdf\xfa\xd4\x7f\xfc\x9b\x5e\xf7\x1f\x7f\xf9\x80\xeb\x23\x5e\x1e\xfe\xe1\xd3\xb7\x4f\xf6\x7c\xfd\xfe" +
	"\x4f\x9f\xbe\x7d\x8a\xf9\xcb\xef\xff\xfc\xf2\xf7\xdf\x3e\xd9\xf3\x93\x3f\x3f\xc5\xf3\x53\x3e\x3f\x8d\xe7\xa7\xf9" +
	"\xfc\xb4\x9e\x9f\xf6\xf3\xd3\x79\x7e\xaa\xe7\x27\x7f\xf9\xb3\x3f\x3f\x79\x3c\x3f\x79\x3e\x3f\xf9\x78\x7e\xf2\xf9" +
	"\xfc\xe4\xeb\xf9\xc9\xf7\xf3\x93\x9f\xe7\x27\xaf\xe7\xa7\xb0\xe7\xa7\x78\x79\x9f\x78\x7e\x8a\x7c\x7e\x8a\xf1\xf4" +
	"\xbb\x5f\x3e\xea\x3f\xfd\xdc\x1f\xf5\xcd\x1c\x3b\x9f\x9f\xec\x9b\x98\x2f\x6f\x64\xdf\x8c\x39\xeb\xf5\x67\xbc\xbc" +
	"\xf0\xe5\x77\xeb\x9f\x36\xb3\x1f\xcf\xfe\xb9\x97\xbf\xfe\xac\x98\xaf\xaf\xdf\xf9\xfa\xba\xdc\xe3\xf5\xf9\x71\x78" +
	"\xdb\xdc\xaf\x0f\xf3\x7b\xae\x7a\x7d\xd9\x8a\xea\x8f\xf1\x7e\xf9\xe0\x65\xe3\xf4\xd7\x98\xa7\x3f\x26\xce\x7a\x7d" +
	"\x59\xbf\x7a\x4e\xef\x5f\x47\xbe\x3e\x7b\xda\xf1\xa7\xdf\xf1\x8f\xd2\xea\x7f\xbd\xe0\x7e\xb3\x05\x8f\x5e\xe0\xd5" +
	"\x0b\x30\x63\xf5\xc2\xec\xd5\xeb\x38\xfb\xf1\x1c\xbd\xfe\x39\x7b\x7f\xb2\x46\xff\xcc\xf3\xfa\xf8\xca\xf9\xfa\xfc" +
	"\x65\xfd\xfc\x28\xeb\x85\xf6\xea\xf7\x39\xa7\xdf\xe7\xc4\xeb\xeb\x96\x07\xfb\xd5\x0b\x9c\xc9\xcf\x11\xfd\xfa\x39" +
	"\x0f\x9f\xd3\xbf\xef\x7e\xbf\xcd\xf3\xd6\xe9\x9d\x88\x65\xeb\xcd\x25\x8f\x9b\x2d\xf9\xea\x35\x9b\x2b\x57\x1f\x9b" +
	"\xf4\x5e\x5b\x1e\xb7\xcd\xdf\xbd\xd7\xb6\x66\xff\xf4\xfe\xfb\xa8\xfe\xb7\x2f\x8b\xbe\x23\x76\x7a\x2d\xf7\xd9\xdc" +
	"\x1d\xf6\xac\x0f\xfb\x48\xee\x82\xcd\xfe\x7d\xf4\x96\xcf\xcd\x9e\x3a\x6b\x3a\xec\x75\xcd\x67\xf6\xeb\x27\x7b\x9a" +
	"\xee\xbd\xb7\x63\xf4\x1e\xd5\x7a\x7b\xcd\xf3\x66\x6b\x6e\x7d\x8e\x46\xd5\xeb\x1a\xac\x79\x4e\xdb\x93\xea\x9f\xd9" +
	"\x6b\x3a\x4e\xf4\x1a\x59\x9f\xff\x31\x6b\xf1\xba\xc3\x9e\xf5\xd5\xcf\xde\xb3\x31\xfb\x7c\xcf\xc3\xf3\xad\xf7\x60" +
	"\x56\xf4\xf3\x03\x3b\x65\xa7\x9f\x57\xd8\xab\x9c\xfd\xbe\x2b\xb9\x37\xec\xad\xf7\x9e\xcf\x5c\xc5\x59\xe8\xbd\xc9" +
	"\x75\xde\x5c\xf3\x71\xaf\x35\x8f\x3a\xfd\xdd\x0d\xdb\x10\x6d\x6c\x87\x67\xdf\x6d\x8c\xe9\xcc\xb6\xb1\xf3\xc8\xe4" +
	"\xb4\x69\x99\xc6\xb5\x18\xbd\xa4\x39\x7a\x49\x8f\x1e\xf7\x36\x31\x3b\x30\x1d\x6c\x45\x60\x8d\x47\x9b\x9c\x85\x95" +
	"\x5e\xc5\x35\x8b\xcd\xf1\x5e\xfd\xf5\x76\x1f\x8d\xec\xdb\xb1\x72\xf6\xc3\x33\xde\x3e\xe5\xf3\x5e\x2b\xbe\x46\x9f" +
	"\xae\xc5\x52\xa6\x25\x46\xbd\x57\x22\xbc\x7f\x2f\xad\xa8\x71\x38\x47\x1f\x46\x0c\xca\x5c\xfd\xfb\x5c\xf2\x6b\x38" +
	"\xd7\xc4\x5b\x7a\x5f\x8a\xb9\x7b\x65\xa7\xb7\xc1\xca\xbd\x7b\x85\x17\x87\x17\x7b\x63\xbb\xbf\x4d\xb8\xb7\x2f\xe8" +
	"\xbb\xb1\xaa\xed\x09\xfb\x3c\xd7\x7e\xdb\x7b\xae\x9b\x2d\xf8\x9e\x98\x89\x3e\x5b\xeb\xf4\xca\x64\xe2\x1e\x65\xea" +
	"\xbd\xdd\xe6\xf0\xbe\x12\xdb\xac\x5f\x77\xfa\x2a\xc8\xdc\x2c\x9b\x84\x37\x87\xb8\xc3\x0f\x66\xa3\x37\x60\x1d\xae" +
	"\xc4\x69\x2f\xdb\x57\x68\x4e\xc2\x15\xc2\x99\x58\x53\xde\x14\xef\x8c\x05\xf7\x45\x18\xd4\xef\xea\xf9\xf6\x11\xdf" +
	"\xf7\x5a\xf1\x3c\xbd\x04\x73\xb6\xe1\x1c\xa3\x6f\xf1\xf0\x5e\x92\x65\x9c\x26\x76\x26\x09\x48\x56\x06\x4e\xae\x77" +
	"\x46\xbe\x6f\xe3\x4b\x1d\x3f\x70\x16\x2b\xdd\x47\x7b\x27\x2b\x76\xb8\x32\xbe\x58\xd9\x8d\xef\x76\x7c\x2e\x61\x54" +
	"\x9b\xef\x5c\x7d\xb3\x56\xf4\xfe\xa7\x4d\xc2\xd1\x3d\xdf\x5c\xf1\x73\xaf\x15\x5f\xde\x2b\x1e\x0b\xfb\xe9\x93\xf0" +
	"\xa4\xed\x6b\x1c\xc2\x8d\xf6\xa8\x7b\x58\x6f\x48\x75\x34\x11\xa3\x30\xbb\x18\x19\x22\xc6\x28\x22\xc0\x51\x04\xd3" +
	"\xfd\xf7\xa8\xc1\x4e\x4c\xdc\x03\xc6\xc8\xb5\x53\x8a\xc1\x37\xe6\x7e\xf4\xd9\x9e\xd6\xcf\xd3\x15\x74\x3e\xb7\xd6" +
	"\xdb\x66\xa5\xee\xb5\xe4\xd3\xb1\x8c\xa5\x48\xce\xf0\xa4\x6b\x7d\xee\x2a\x67\xb1\x35\x1b\x83\x1b\x1d\xf1\x2d\xdb" +
	"\x9c\xd6\x8e\xa6\x97\xf1\x3e\xd5\x97\x23\xc8\x92\x72\xb5\xdd\x58\xb6\xfa\xf9\x44\x21\xb1\x59\xfb\x64\x6f\xc6\xc6" +
	"\x73\x77\x10\x8e\x87\x5d\xbc\x5d\x56\x7b\xf0\xa8\x24\xc8\xca\xb7\x4f\xb9\xdf\x2c\xf3\x0c\x22\xb6\x9c\xac\x65\xf5" +
	"\xf9\x8a\x6a\x2f\x36\x89\xae\xd7\xe1\x5c\xad\xa1\xf0\xa1\xd7\xaa\xb6\xd6\xb2\x2d\xc4\x22\xd1\xc1\x25\x07\x01\x63" +
	"\x62\x30\x06\x0e\x80\x58\x7f\x5a\xef\x10\x09\xa8\x32\xcb\xe0\x32\xb0\x21\x73\x6c\x0c\x3f\xa9\x81\xd2\xb4\x9a\xf1" +
	"\xf6\x8a\xdf\x2d\xf5\xdc\x87\x98\xba\x58\xe1\xbe\xe0\x87\xa8\xe4\xb4\xcd\x8c\x65\x1c\x3e\x20\x81\x5d\x7d\xda\x66" +
	"\x5f\x86\x5c\x45\x5a\x82\x93\x24\x65\x9d\x1d\x6d\x4c\x59\xf0\xea\x7d\x1d\x87\x84\x73\x10\x60\x13\xa0\x73\x55\x12" +
	"\x8f\x3c\xd7\x26\x80\x27\x78\x21\x56\xda\x24\x49\xe9\xfe\xc0\x8a\xdf\x2d\xf3\x1c\x0a\xd0\x4a\xb6\x96\x2c\xc4\x05" +
	"\x6f\x90\x69\xf6\xcf\x11\x1d\x47\xcc\xd1\x21\xf3\x36\xee\xc8\xd9\x04\x96\x4e\x76\xdf\xaf\xbf\x6c\x3c\x19\xe8\xaa" +
	"\xd9\x61\xd1\xee\xdf\x07\x3b\xbd\x6a\x63\x28\xda\x4e\xc5\x1e\x6c\x71\x3b\xe9\x88\x90\x37\xe6\xfb\xca\xd6\xcf\x7c" +
	"\x7b\xd1\x6f\x96\x7a\x8e\x35\x70\x80\xa4\xfb\x6e\xc4\x08\x1c\xff\x22\x86\x6c\x5b\x3e\xbc\x74\xfc\x31\xb2\x49\x46" +
	"\xd9\xa6\x20\x87\xd2\xa3\xa3\x98\xae\x1f\xb7\xf6\xa7\xb1\xab\x2d\x4a\x10\x83\x0b\x63\xe8\x0f\xc3\x33\xac\x41\xfe" +
	"\x9b\x1b\x2f\x4b\x80\xb2\x06\x49\x58\xdb\x99\xb3\x1f\x58\xf0\x9b\xe5\x9d\xb9\x01\xed\x86\x8c\x63\x9f\xce\xb5\xfb" +
	"\x34\x6f\xc7\xb2\xcf\x4d\xce\xee\x0a\x21\x95\xd6\x80\x21\xb6\x89\xd8\x44\x16\xb1\xdb\x13\x24\xd1\xb4\x70\x95\x91" +
	"\xa1\x24\xa0\xd7\x94\xc8\x47\xb7\x66\x0a\x5f\x51\xae\x8f\xc1\x52\x82\x3a\x67\x81\xeb\xb4\xa1\x5b\x56\x0f\xc0\x88" +
	"\x37\x4b\x3d\xc7\xde\x84\x1a\xc4\xdd\xdb\x09\xf3\x3a\xde\x5e\xa7\x63\x86\xb1\x3b\x90\xde\xee\xc4\xe1\xbd\x28\x72" +
	"\x74\x79\x58\x03\xfb\x02\xa3\x1a\xd8\xfa\xd4\xa1\xe7\xee\x90\xc3\xcb\x3a\xcf\xdd\x5b\x35\x30\x28\x13\x38\x25\x2b" +
	"\x04\x13\xf7\xf3\x4e\x11\xfe\x2b\x45\x1d\x6f\xaf\xf8\xcd\x72\xcf\x94\x71\x3e\xd8\x97\x91\x1c\xd3\xf8\x22\x30\x59" +
	"\x13\xb4\xfa\xf4\x9d\x1e\x83\x88\x63\x0b\x91\xed\x95\x04\x04\x61\x61\xac\xc0\x18\xc1\xdf\xb7\xec\x05\x4e\x99\x80" +
	"\x64\x99\x91\x76\x75\x98\x93\x56\x78\x90\x4e\x5c\x33\x37\xfb\xd7\x9e\x67\x07\x21\xe3\x39\x6f\xa7\x9e\x7e\xb7\xdc" +
	"\x73\xf5\x3f\x2a\x72\x73\x6a\xfa\xc2\xaf\xa1\x14\xa4\x0d\xce\x26\x9b\x17\x92\x04\xa4\xbd\x15\xda\x1d\xe2\x14\xcc" +
	"\x8f\x9c\x23\x10\xe5\xc2\x90\x2b\x52\x5c\x0b\x13\x0e\x12\x48\x10\x3e\xda\x95\xa6\xc0\xdf\x20\x2e\x21\x16\x1f\x5b" +
	"\xdf\xd1\x89\x5f\xde\x5e\xee\x9b\x25\x9e\x73\x2d\xe0\xa7\xa9\x34\xa3\xff\x25\xa2\x28\x64\x39\x00\x39\x36\x26\x04" +
	"\x3f\x9a\x5c\x07\x52\x18\x61\x58\xd1\xcb\xb8\x65\xbc\xb7\xdc\xea\x56\x84\x0d\x16\x26\xa0\x77\xc1\x10\x0d\x6d\xa6" +
	"\xb3\xee\x4b\xc6\xba\xb7\x25\xe4\x54\x9e\x3b\x2b\x7d\xc0\x86\xdf\x2c\xed\x4c\x4f\xa0\x4f\x91\x37\xf8\xad\x0e\x85" +
	"\x17\x6e\x35\x8c\x78\x7b\x12\xfc\x91\xd9\x9c\x7e\x5a\x42\xc9\xa5\x63\x22\xa0\x96\xb6\xc9\x4e\x01\xb1\x3b\x6e\xb2" +
	"\xae\xdf\xf1\x1c\xfd\x2d\x32\xda\x50\x65\x2e\x20\x16\x6e\x1b\x49\xea\x36\x4e\xba\x2f\x2e\xc4\x7a\xdb\x88\xc7\xcd" +
	"\xb2\xce\x24\xc2\x9d\x22\x1c\x8d\x18\x81\xf8\x2c\xb8\x03\x49\xc4\xbc\xb2\x71\xaa\xdc\x93\xe3\x1c\x3a\xbe\x40\x7a" +
	"\x6d\x63\x04\x00\x92\xdc\x28\xf2\x31\x72\x20\x07\x2b\xa9\x54\xfc\x8e\xbb\x24\x38\x24\x0c\xe7\x2c\xeb\xaa\xc0\x6d" +
	"\x5c\x14\xe1\xa8\xb7\xd7\xfb\x66\x39\xe7\x90\xf1\x28\x6c\x0b\x50\x76\x4e\x65\x3e\x24\x9b\x03\x94\x09\xc4\xc3\x39" +
	"\xf3\x0e\xae\x67\x00\x2b\x1d\xc9\x0d\x22\xb9\x9c\xbd\xde\x39\xc4\x21\x80\x0a\x86\xb2\xfb\x04\xb7\x51\x0c\x0f\x43" +
	"\xc7\xfe\x8c\x6d\x5f\xc0\xc1\x73\xc0\x3e\x4d\x1e\x1f\x0f\xc0\x87\x71\xb3\xa4\x73\xac\x8e\xdd\x56\x28\xe3\x36\xec" +
	"\x36\x18\x38\x64\xc2\x0c\x9c\xa7\x18\xff\x8e\x18\x66\xf0\x77\xcc\x40\x2e\xd8\x49\x98\xb4\x04\x41\x49\xdc\xe9\x5a" +
	"\xe4\x4b\x7a\xdf\x15\xe0\x8e\x2c\x75\xfb\x4b\x31\xfa\xd3\x20\xf6\x4e\x71\xe1\x04\x03\xf0\x69\x6f\x67\xf9\x71\xb3" +
	"\x84\x73\xc6\xc0\x7c\x1f\x2d\x78\x63\xd9\xe4\x31\x0b\xe2\x2d\xf6\x20\x8b\x27\xff\xc8\x0b\x13\x87\x58\x13\x74\xd5" +
	"\x1b\x35\xa1\x7f\x06\xf4\x51\x0e\x62\x45\x49\x08\x70\xad\x6b\x13\xe0\x8c\x01\xa3\x06\xed\x34\x41\x03\x92\xef\xc5" +
	"\x06\x2e\x57\x92\x0f\x00\x37\x1f\xb0\xe3\x37\xcb\x39\x47\x91\x78\x4c\x28\xb4\x42\xf7\x50\xba\xc9\x6d\x4b\x03\xc4" +
	"\x76\x1b\xf6\x9e\xf4\x68\xee\xcd\x5a\x8b\x2b\x33\x72\x4b\x10\x1b\x5b\x0a\x3d\xb1\xfb\xa2\x3b\x12\x0e\x1f\x67\x08" +
	"\x6f\x3c\xf4\x03\xda\x9b\x18\x73\x19\x66\xef\x4c\x3e\x8e\xd4\x78\xec\x07\x64\x14\x37\x4b\x39\x45\x43\x08\x13\x2f" +
	"\x45\x8b\xc2\xb6\x7a\x65\x0e\xe9\x90\x05\x61\x49\x7b\xcc\x1d\x30\xf0\xdc\x11\x40\xc5\x43\x6e\x2f\xa4\x5d\xe6\x41" +
	"\x79\x69\x10\x75\x8b\xe7\xe3\x4a\x6c\x72\x2b\x8c\x14\x34\x90\x70\xfa\xb5\x08\x42\x81\x82\xe6\x78\x40\x28\x14\x37" +
	"\xcb\x37\x27\x41\x82\xae\xfd\x94\xfa\x44\x88\x91\x6e\x7f\xef\x4b\x02\x94\x2e\xb8\xcb\x85\x51\x29\x18\x4d\x28\x8b" +
	"\x84\x39\x9d\xbb\x1f\x5f\x19\xb0\xfb\x7a\x7b\xc5\xe1\x6c\x27\x38\x6d\x40\x85\x8e\xc0\xf5\x92\x58\xce\xea\xaf\x33" +
	"\x77\x3f\x6f\x13\xad\x8c\xf5\xc8\x09\xbf\x59\xc2\xb9\xb6\x73\xbc\x4c\x5c\x17\xff\x18\xe5\x80\x43\xaa\x93\xbe\xde" +
	"\x30\x72\x33\x44\x51\xcc\xcf\x0d\xef\x18\x32\x36\x72\xa1\xe4\x32\xb0\xd5\x73\xb4\xab\x4c\x60\xde\x0b\xa9\x1c\x08" +
	"\x38\xe0\x5a\xa7\x54\x71\x04\x45\xec\xfc\xc6\xcf\x8c\x01\x18\xe3\x8f\x38\xcf\x9b\x25\x9d\x09\x11\x33\x14\x0b\x23" +
	"\xf9\x1b\x45\x3a\x39\x61\x60\x82\xab\x4d\x98\x22\x3a\x72\x59\x07\xee\x2b\x0a\x9e\xa7\x44\x5b\x02\x2a\x1a\x59\xfd" +
	"\xc6\xde\x00\x93\xc1\x81\x44\x80\xf6\x82\xd7\x0e\x40\x81\x41\x9a\x9f\x80\x06\x29\x78\xa6\x61\x15\x3e\x35\x1f\xc8" +
	"\x3a\xe3\x66\x59\xe7\x1c\x9b\x25\xc0\x12\x08\xf4\x27\x42\x5b\xae\xf8\x31\x20\x0d\x26\x84\x0e\x08\xf7\x50\x58\xc2" +
	"\x25\x59\xc8\x4b\xac\x4f\x75\x2c\xc8\xd2\x03\xfe\x5e\x58\x22\x6c\xf5\x54\x10\x0e\x94\x05\x6f\x34\x38\xfc\x73\x23" +
	"\xc5\x58\x1c\x04\x14\x5f\xa9\xcb\xb0\x1f\xe0\x97\xf3\x66\x69\xe7\x08\x88\x17\x82\xe3\x90\x7a\x93\xb0\xc0\xb1\x2f" +
	"\x03\xf1\x04\xf9\x89\x84\x44\xc3\x2f\x75\x1c\x87\xd9\x64\xdc\x27\x46\xb9\x5f\x8f\x90\xe8\xc2\xcb\xf0\xb1\xb2\x66" +
	"\xd2\x82\x02\xcd\x2c\x61\x87\xfd\x6e\x53\x9e\xfb\x6c\xe2\x57\x24\x1f\x2b\xdf\x4e\x3c\xf3\x6e\x89\x67\x6d\x98\x5c" +
	"\x30\xc4\x45\x6a\xce\xe9\xdd\x49\x2a\x5e\xd7\xe9\x45\x31\x22\x70\x90\x0c\x91\x53\xb8\x39\xbc\x50\x16\x20\x21\x04" +
	"\xe2\xc4\x2a\xce\xb2\x1f\x69\x6c\x27\x34\x3d\xb9\x2d\x7a\x50\x49\x66\xb2\x30\x69\x38\x70\x79\xd4\x91\x6f\x9b\xf1" +
	"\xbc\x5b\xd2\x79\x4a\x3c\x3a\xff\x66\xf2\x75\x28\x16\x28\x9c\x19\x78\xb8\x79\xb0\xa3\xf5\x05\xf7\x9c\x87\xcb\x2f" +
	"\xd0\x15\x16\xff\x22\x8f\x79\x3a\x94\x74\x2e\x57\x2e\x4b\xb0\x02\x87\x97\xe8\x39\x16\xe2\x25\x3c\x25\x6c\xc6\x5c" +
	"\x88\xda\x21\xac\x96\x3f\x70\xbe\x6f\x96\x74\x8e\xf2\xcf\x23\xdf\x91\xd2\xd9\x12\xc6\x01\xa0\xcc\x82\xcf\x21\xab" +
	"\xdf\x30\xc5\xc7\x94\x17\xa1\x9f\x1d\x22\x4d\x61\x37\x93\x8d\x42\x48\x37\xb1\x21\x79\x00\x0b\x25\x3d\x0c\x62\x90" +
	"\x05\xef\xe0\x42\x81\x07\x31\x0a\x22\x52\x85\x89\x08\xed\x96\xaf\xb7\x91\x95\xbc\x59\xd2\x19\x85\x0b\x32\xc9\x3e" +
	"\xf9\x47\x4b\x29\xbb\xc0\xae\x13\xbd\x8e\x24\x55\xc0\x55\x23\x09\x32\x88\x91\x85\x6a\x8d\xe4\xb6\x4c\xd9\x24\x20" +
	"\x15\x42\x7d\x81\x68\xb1\x37\x2e\x10\xf2\xa8\x44\x16\xf1\x3d\x44\xff\x13\x9e\x6e\xf4\xa5\x51\x00\x07\xe9\x6f\xb3" +
	"\x12\x79\xb3\xac\x33\x88\xc4\xa6\x2b\x13\x27\x62\x4b\x45\xc1\xc0\xe1\x06\x60\x8b\xb0\xbb\xcd\x0c\xb7\x83\x64\x1f" +
	"\x95\xe0\x18\xc0\x88\xc9\xfa\x6f\x93\xb2\x8e\x97\x49\xce\x29\x07\x89\xcc\x4b\xfa\x5b\xbb\x34\x46\xc4\xf5\x4b\x79" +
	"\x00\xc9\x2b\xa9\xaf\x7d\x2e\x22\xef\x9f\xfd\x2b\x8b\xff\x75\xf9\xd1\x7f\xf8\xcb\xcf\x7f\x4f\xfd\x91\xfd\x7f\x50" +
	"\x80\x14\x2a\x40\x4a\xf6\x68\x8b\xac\x57\x41\x92\x7d\x21\x16\xd8\x83\xcc\xbf\x08\x71\xda\x9e\x0c\xd4\x61\x41\x44" +
	"\xb4\xea\xa0\x7d\xee\x30\xc0\x4b\xa6\x1f\x14\x02\x0d\x41\x24\x38\xb4\xea\x13\xae\xd4\x0c\x8a\x91\xe7\xcd\x43\x84" +
	"\x85\xfd\xdc\x4a\x83\x2b\xde\xf6\x1d\x77\x0b\x8d\x08\x85\xd2\x0b\x79\x21\xc8\xad\xa4\x59\xd4\xc3\xec\x84\xe3\x30" +
	"\xa9\xdb\xc1\xca\x86\xd2\x54\xb2\x60\xcc\x9a\xa8\x12\x08\x50\x94\xd7\xe1\x24\x58\x62\x61\xf9\x9d\x2b\x92\x92\xb4" +
	"\xc3\x92\x93\x9f\xa5\x84\xbc\x90\x55\x53\x49\xc9\xb2\x07\x72\xdc\x7b\xad\x77\x78\x9f\x25\x73\x48\x25\x9b\x80\xe3" +
	"\x0b\x03\x84\xd8\x79\x91\xf7\x07\x42\x7e\x73\x6f\x03\x24\x02\x3c\xa7\xc0\x73\x81\x39\xd1\xcf\xa3\xea\xa5\x40\x31" +
	"\x4d\xb4\xff\x51\x6d\xc7\x22\x37\x1b\x80\x71\xb3\x97\xb5\x0c\x99\x00\x5f\xa8\xda\x71\xf1\x76\xd4\xd8\xac\xf9\x88" +
	"\xdb\xb8\xd7\x9a\x3b\x18\x7b\x91\x3d\x9a\x7b\x2f\xcd\x01\x5c\x77\x54\x8b\x35\x3b\xb0\x47\xed\x65\xc3\x3b\xf9\x31" +
	"\x9f\x08\x17\x17\x9b\x21\x5d\xa4\x57\x1f\xd9\x93\xfd\x3b\x96\x46\xce\xdb\xb3\x9d\x70\xb5\x1d\x73\x88\xc3\x20\xe2" +
	"\x2d\xde\xee\x10\x30\x99\x04\x1a\x33\x55\xc9\x80\x24\xef\xbc\x7d\xd0\xef\x16\x1f\x51\x0e\x41\x7e\xe9\xfb\xc2\xab" +
	"\x50\xea\x22\x38\x1d\x52\xce\x09\x4a\x44\xce\x3c\xda\xce\x38\xb9\x56\x90\x44\x1c\x2b\xd9\xea\x3e\xd4\x00\x16\x63" +
	"\xc0\xee\x9d\x09\xe6\xdf\x76\xe8\xc0\x31\xee\x0d\xf8\x8e\x18\xe9\xec\x5e\xe2\x4d\xcd\xc1\x52\xb2\x81\x78\x24\xdf" +
	"\xc6\x15\x6e\x16\x1b\x8d\xd9\x0b\x6e\xab\x54\x57\x4b\xe5\x11\xf4\xea\x41\xf3\x98\x4a\x90\xa8\xe5\xf2\x7d\xa4\x02" +
	"\x43\x0a\xec\x82\xbb\x40\x7b\x1b\xa7\xb0\x40\x09\xea\xd5\x86\xc2\x11\x15\x14\x28\x4d\x98\x8b\xd9\xa6\x5e\xb4\xff" +
	"\x7e\x4c\x5c\x54\x1b\xa0\x83\x3b\x8e\xbe\x15\x47\x12\xc0\x3a\x6f\x9b\x96\xbb\xe1\xf2\xd4\xbd\x2d\x10\xf5\x0d\x70" +
	"\xe5\xfc\xdb\xa4\x70\x91\xfe\x6b\x52\x7a\x18\x4a\x95\x30\x35\xdb\x88\xe2\x11\xff\x8a\xa5\x23\x65\x1e\xc0\x6a\x23" +
	"\x16\x11\x0b\x58\x11\x18\x51\x08\x43\xaa\xde\xba\x8d\xb6\xd8\x8b\x0a\xe1\x50\x71\x19\xc9\xae\x94\xef\xf9\x40\xb6" +
	"\x7b\x33\x5c\x7e\x63\x11\x72\x3a\x11\x0a\x17\x18\xd9\xb4\xc8\x20\x95\x98\x4a\xf7\x45\x39\x2d\xc1\x3d\xfc\x08\x2e" +
	"\x30\x25\xf7\x82\x33\x1a\x0d\x82\x05\x04\xdf\x9c\x06\x95\x44\x4c\x2f\x22\x11\x45\xe3\xc0\x83\x4e\x21\xc1\xcb\xf5" +
	"\xa9\x70\x01\x80\xf2\xf3\x01\x25\xd8\xcd\x30\xf9\x05\x6d\xb6\x8a\x85\x45\xae\xbe\x07\x14\xe0\xb5\x0d\x1d\xb3\x6f" +
	"\x2a\x46\x93\xfc\x29\xc8\x4b\x03\xc3\xeb\x84\x2b\x8e\x15\x5a\xc7\x10\x06\xf7\xd2\x6f\xa8\x43\x27\xf8\x83\xdb\x4d" +
	"\x1c\x6c\xf2\x31\xc9\x76\x07\xe2\x54\x09\x98\x02\x05\x5a\x2a\x05\x5c\xf6\xee\x2a\x90\x9c\x40\x4d\xd1\xc3\x19\xd4" +
	"\xc7\x59\x48\xcc\xc1\xe9\x83\x05\xb9\xe8\x68\x92\xdf\xce\x48\xad\xd0\x27\x9d\x90\xbc\xfc\xf5\xe1\x4d\xe4\x29\x2d" +
	"\x9f\x4d\xde\xb0\x0e\x80\x34\x35\xe7\xc3\xfb\xf3\x6d\x3b\x3a\x62\xf6\xc6\xc8\x71\xd5\xc9\xa1\xa2\xcf\x77\x21\x3a" +
	"\x28\xcb\x07\x24\xbd\x37\x4b\x3e\x97\x69\xd5\xe1\x8b\xe9\x4a\x81\x25\x49\x04\x1a\x07\x76\xdf\x12\x2f\x07\x7e\x70" +
	"\xd0\x5c\xe7\x69\x78\xf2\x2c\xce\x3b\xac\xff\x80\x43\x2d\xf4\x7d\x4e\x32\xb9\x56\x0a\xc7\xe9\xb7\x01\x9f\xa7\x74" +
	"\x32\xd3\xe4\x94\x11\x11\x40\x3e\x95\x84\xab\x86\xea\x29\x1e\x10\x99\xde\x2c\xf9\x9c\x2a\x0f\xed\x73\x36\xc1\x07" +
	"\xa5\x88\x3b\x4b\xbd\x0f\xda\x1b\x56\xe2\x44\x21\xa7\xc6\x52\x8f\x85\x36\xb3\x3e\x38\xd0\x65\x64\x34\x90\x1c\x23" +
	"\x88\xe3\x77\xf5\x3b\x39\x95\xa3\x85\x55\x71\x79\x0d\xe1\x49\x48\xf9\xc0\x78\x46\x70\xd3\x70\x17\x45\x82\x9a\xf3" +
	"\x3c\x70\xce\x6f\x96\x81\x4e\x87\xdc\x10\x30\x48\x71\xae\x6a\x37\xe7\xc5\x3b\x51\xa7\x58\x2a\x64\x6f\xe6\x42\x40" +
	"\xe2\xf1\x44\x0a\x3a\x49\x23\x61\x8a\x5c\x21\x8f\xf0\x79\x47\xf3\xd1\x59\x98\xe3\x08\x72\xb4\x1f\xdf\xaa\x55\x6d" +
	"\x5b\xe2\x2a\x47\xda\x34\xca\x10\x7c\x8f\x0c\x2f\x6c\xbc\xdd\x8c\xe1\x6e\x65\x48\x93\x2c\xa7\xc6\xc1\x80\x9e\x85" +
	"\x15\xb0\x2f\xd0\xd9\x83\x85\x5d\x48\x8a\x82\x36\x25\x9b\x4c\x74\x10\xc3\x9b\x93\x69\x5a\xf2\x4a\x13\xb8\x12\xb8" +
	"\x81\x49\x11\x52\x20\x9a\x26\xc5\x25\xf2\xb1\x95\xbd\xdd\x05\x78\xaf\x6d\x33\x52\xdd\x75\xa8\xa2\x47\xae\x5a\xf9" +
	"\x00\xf1\x77\xb7\x6a\x24\xa7\x0e\xf9\x25\x81\x87\xb3\x07\xe2\x83\xbf\x2e\xdb\x22\x55\x91\x88\x51\xec\x36\x2f\x49" +
	"\x80\x44\xa5\xb3\x5d\x29\x72\xec\xc3\x3e\x54\xf5\xba\x1a\x35\xa5\x6e\x7d\x6b\x0e\xce\xd9\x54\xc8\x34\x81\xc2\x36" +
	"\x06\x3e\x36\x6c\x18\xe0\xd6\xb9\x14\xf4\x9d\xd0\x16\xdf\x34\xe2\x81\x10\xfd\x6e\x05\x49\x9d\xcc\x9c\x0c\xa0\x2c" +
	"\xea\x51\x14\x0e\x27\xf6\x1b\xad\xe4\x29\xa2\x86\x8e\x18\x0f\x0e\x78\x53\x16\x13\xc0\xb1\x81\xa6\x60\x8f\x04\xd8" +
	"\x92\xa2\x3a\x81\x57\xdc\x81\x1c\x60\xcc\xd5\xff\x08\x09\x4e\x86\xfa\xc4\x80\xc1\xed\xea\x5d\x3f\x28\x8b\x37\x7e" +
	"\x63\xfb\x23\xce\xf4\x66\xa9\x68\xae\x5e\x96\x02\xde\x03\xcb\x12\x8e\x98\x34\xfe\x30\xa9\x20\xcb\x51\x96\x63\x27" +
	"\xcc\x89\x74\x02\x38\xd6\xc6\xea\xf5\x3a\x94\x57\x5c\x34\xf9\x45\xd4\x4a\x3c\x4a\x6f\x22\x2a\xdd\xc5\xeb\x6d\x8a" +
	"\x9f\xc8\x1c\x52\xf2\x6e\x48\x76\xe9\xab\xe1\x65\xf3\xd8\x03\x86\xfd\x66\xc9\x68\x5d\x89\x79\x47\x87\x45\x22\xee" +
	"\xd9\x56\xf3\xc5\x3c\xf7\x03\x71\x65\xab\x7d\xd4\x4a\xaa\x0e\x09\xb1\x2f\xba\xae\xc1\x11\xa4\x09\x92\xe4\x39\x66" +
	"\x61\x4a\x3b\x8f\x20\xe7\x6c\xd1\x7a\xbd\x8a\xee\x01\x06\x83\x32\x10\xe9\xc3\xa6\x4b\xc9\x41\x1d\x62\x87\x0a\x90" +
	"\x1a\x8f\x14\x3c\xde\x2c\x29\x1d\x83\xcc\xc4\xc6\xec\x05\xdf\x94\x38\x2e\x14\xa8\x5b\x9d\x28\x10\x26\x99\x4a\x73" +
	"\x07\x2d\x02\xcc\x29\xf3\xb7\x13\x04\x3a\x04\x44\x45\x01\x01\x8c\x48\x85\xe2\x19\x7a\x10\xe0\x67\x13\x22\x70\x52" +
	"\x2b\x9c\x27\xbf\x20\x04\x8b\x40\xa6\x78\x5d\x01\xed\xb8\xaa\x4c\xf2\x91\x86\x75\x37\x4b\x4d\xc7\xa6\x7c\x97\xd0" +
	"\x7b\x05\x52\x18\x7a\x5e\x98\x51\x0e\x86\x10\x8f\x00\xba\x76\x9b\x14\x08\xb9\x5a\xec\xc1\x74\xe2\x6e\xf6\x62\x52" +
	"\x20\x82\x29\x3b\xab\x37\xd7\xa6\x82\x41\x80\xf2\x4d\x17\xb5\x85\x5e\xcc\x8a\x76\x57\x05\xfb\x7d\x68\x61\x67\x81" +
	"\xb0\xdd\x02\x3a\xc3\x22\xc7\x03\xac\xd1\xcd\x92\xd3\xcb\x33\xad\x8e\x03\x0f\x7d\x1a\xd6\x42\xd2\x71\x68\x1e\xc2" +
	"\xa1\x9d\xeb\x2a\x61\xea\x5f\x27\xc2\xc8\x7e\xb8\x28\x1b\xab\x10\x01\xd1\x56\x46\xa2\x05\x15\xde\x0d\x9a\x8d\xd8" +
	"\x42\x39\x69\x87\x62\x1a\xf6\xdd\x1c\x4d\x94\xa7\xc0\x63\xd2\xe6\x40\xa6\xaa\xae\x47\xe7\x01\x33\x73\xb7\x82\xa5" +
	"\xa4\x48\xc3\x6c\x81\xd7\x3a\x71\x78\x6d\x35\xc2\x41\x2f\x39\xc0\xd8\xa7\xca\xb5\x50\x6b\x34\xa0\x32\x3a\x9a\x2f" +
	"\xf4\xad\x40\x5f\xc2\xd3\xb7\xea\xcd\x68\xe1\xb2\x80\xd8\x0c\xee\x22\x36\xd9\xaa\x1c\xb3\x2a\xaf\x0b\x10\xac\x26" +
	"\xe4\xeb\xe0\xfd\x78\x9e\xed\xbd\x1f\x28\x13\xbb\x59\x82\x5a\x5c\xf6\xa3\x62\x52\xb2\xfa\x40\xe5\x64\x22\x30\x86" +
	"\x74\x62\x94\xd8\xd0\xbc\x61\x9f\x92\x7a\xaf\x5d\x22\x99\x8e\x7d\x56\x26\x0a\x5f\xd1\x71\x63\x0d\x7a\x0c\xe0\x2b" +
	"\x4b\x1f\x74\x50\xa2\x39\xfc\xf5\x41\x67\x6c\x85\x7b\x4f\xd2\x06\x75\xde\x34\x35\xf9\xa8\x1a\x0f\xd4\xd1\xdc\x2c" +
	"\x4b\x3d\xc3\x95\x0c\x95\x62\x04\x95\xc0\x11\x4b\x82\xdd\x52\x64\x64\x12\xb5\x07\x80\x88\x53\x3e\xba\x07\x2d\x72" +
	"\xd8\x42\xb1\x74\x93\x77\x3e\xc7\xb1\x3b\xf6\x25\x73\x04\x4f\x11\xd6\x3b\xbc\xf1\xbd\x45\x24\xbf\xc6\xd5\x51\xa3" +
	"\x37\xac\x63\x18\x07\xb8\xb4\xb5\x1f\xe8\xd4\x78\xb7\xf2\xa5\xa2\x29\x40\x9d\x8b\xe9\x97\x71\xa5\x5f\x8e\xb9\xb2" +
	"\xf6\x20\xff\xb4\xbd\x81\xb8\x44\x59\xd3\x3b\x73\x93\x73\x39\x8e\x41\x09\x6d\xa1\x90\x1a\xc8\xc6\x0a\x89\x8d\xd9" +
	"\x49\xc5\x2b\x1d\xc7\xd4\x86\xfe\xa7\x9f\x21\xc2\x55\x9b\x47\xec\x39\x9a\x71\xc4\x55\xe6\x28\x9d\xea\xac\xb7\xb3" +
	"\xa6\xbb\xd5\x31\xd9\x2f\x65\x1c\x70\xed\xc8\xfa\xb0\xc1\xa5\x98\xb0\x0f\xe2\x31\xc7\x26\x01\xd7\xda\x75\xd0\x7b" +
	"\x95\x86\x9a\x62\xf4\x2a\xd3\x18\xc0\xe7\x20\x5e\xcd\x7e\xbe\x1d\x69\x89\x04\x75\x62\x37\xb6\x34\xae\xc0\x09\x48" +
	"\x95\xcc\x25\xef\x98\x34\x32\x29\x75\x45\xce\x47\xca\x52\x6f\x96\xab\x82\xe3\x12\x92\x6f\xa3\x21\xf4\x45\x97\xa9" +
	"\x0b\x1d\xf4\x1b\x48\xa3\x1a\x8d\xa4\x20\x15\xfa\x93\x4c\xc5\xfe\xa9\x7a\x62\xac\x05\xdd\xea\x42\x0d\x75\x52\x9a" +
	"\x25\x1c\x43\x5d\xd2\x6d\x82\x2b\x35\xfa\xc2\x01\x05\xb8\xf4\xa6\xa4\x47\x95\xc6\xab\x1e\x88\x20\x6f\x96\xa9\x4e" +
	"\x84\xfc\x93\x4e\x82\x2b\xe0\xeb\x28\x7e\x5f\x74\x72\x88\x89\xd8\x1d\xb1\xaf\x49\xac\x62\xb9\x09\x06\xf7\x75\xe1" +
	"\xd1\x64\xa0\xf9\xda\xd4\xbc\xb2\x4c\xb6\x7c\x02\xe4\xf4\xbe\x79\x41\x8e\xe3\x4e\xa6\xab\x3d\xc4\x94\x3b\xe9\xa4" +
	"\xd6\xc1\x63\xa4\x58\x98\x3b\x71\x03\xf3\x81\x3a\xb2\x9b\xe5\xaa\x41\xab\x8c\x1d\x0a\x6b\x4a\x61\x4b\x9f\x3a\x94" +
	"\x29\x9b\x56\x0d\x87\x8d\x4a\x7c\x20\xf0\xcc\x5e\xd2\x95\x0e\x0c\x7c\x07\xdc\x4e\xff\xd7\x97\x5c\xaa\x4d\xc5\x1a" +
	"\x22\xb2\x5c\xde\xbb\x63\xd6\x41\x29\x30\x34\x8b\x64\x51\x83\x96\x4b\x33\x71\xc6\x44\x91\x6d\x99\xea\x21\xfb\x72" +
	"\xb3\x34\x75\x23\x5d\x71\xd5\xb3\xa3\x68\x1f\x0a\xe0\x46\x60\x90\x83\x1e\x39\xe6\x94\xa8\x1e\x9a\xa5\x97\x7a\x07" +
	"\x16\x78\x2c\xd5\xbc\xa7\x78\x65\x82\xe5\x67\x88\x3d\x85\x0f\xa1\x4c\xc1\x4c\x9f\x56\x48\xfa\xa4\x93\xb1\x83\x30" +
	"\x7f\xa3\x5d\x28\x35\x0f\xef\xfb\x61\xe6\xda\xa2\x7a\x80\xbd\xbe\x5b\x7d\x53\x92\x02\x6e\xda\x62\x38\x8d\x19\x96" +
	"\x75\x60\x11\x5b\xdd\xa8\x28\x4f\xc0\x2c\x84\xb3\xb2\x03\x7b\x9d\xe7\xcb\xd2\xc9\x8d\xec\xf7\x20\x19\x28\x4c\x56" +
	"\x99\xca\x03\x11\x3a\xaa\xae\x40\x10\x3b\xb2\x8c\x1d\x9a\x4f\x40\x58\xbf\xd0\x2d\x11\xb5\x3a\xaa\x9a\xf0\x7a\x3b" +
	"\x8a\xbc\x5b\x8d\x93\xab\x65\xa6\x6a\x75\x05\xc2\xaa\x78\x03\x74\xbd\xc0\xbf\x02\xbe\x61\x53\x71\xb4\x16\x0d\x0a" +
	"\xd4\x7e\xd0\xe7\x17\x1d\x5e\x72\xe3\x7c\x81\xd5\x88\x57\xc8\x68\x17\x2e\x61\x01\x2a\xbf\x04\xe2\xbd\xc4\x6c\x9d" +
	"\x94\x34\x02\x18\x5c\x35\x39\x2a\xec\x7c\xe0\x9c\xdf\x2c\x4f\x55\x1f\xd0\x7d\xa8\x10\x48\x35\x27\xc5\x8e\x42\x6f" +
	"\x04\xd5\xa3\xf3\xc0\x76\xa8\x60\x63\x61\xf6\xd1\x0c\xb5\xa5\x5a\x1d\xbb\x9c\xab\xfc\x97\xee\xb3\x58\xf7\x0c\x13" +
	"\x62\x43\x8c\xd4\xb8\x04\xe9\x80\xaa\x89\x61\x5c\x6c\x23\xa7\xdc\xfb\x9a\x96\xa1\xbe\x1f\xef\xae\xca\x69\x2f\x59" +
	"\xe6\x4b\xfc\x86\xfd\x00\xbf\x55\x03\xcb\x79\x25\x8f\xc4\xe8\xa0\x89\xf3\x0b\x78\x37\x41\x49\x72\xaa\xbb\x83\xc4" +
	"\x06\x6d\x64\x78\x57\xdb\x80\x40\x00\x59\x83\x62\x29\x27\xe8\x71\xb1\x56\x07\xad\x0e\xf2\x8e\x58\xfe\x99\x33\xf5" +
	"\x79\xf6\xbb\x2b\x71\xb2\x24\x4d\x07\x05\x94\xc6\xb6\xd0\x21\x05\x47\xf7\x5c\xda\x5e\xfa\x6c\x0c\x34\xbf\x24\x35" +
	"\x4e\x44\x73\x88\xdb\x0b\xbd\x87\x49\x0a\x00\x13\x0d\xe8\x28\xb3\x0e\x94\x19\x5c\x27\x5b\x44\xaa\xf3\x7a\x5e\xa7" +
	"\xb2\x47\x8d\xf7\xd5\x72\x12\xc8\xd7\x6d\x3e\x50\x56\x76\xb3\x7c\x74\x6c\xb1\xf5\xc1\x5a\x5f\x12\x70\xe5\x1e\x7d" +
	"\xef\x2f\xdf\x07\x4b\x41\x35\x40\xd1\x55\xba\xae\x16\x74\x89\xd0\x80\x18\x10\x3a\xc4\x02\xed\xb9\x8a\xda\xad\x48" +
	"\x4d\xa5\x55\x04\x9a\x77\x92\x33\x0b\x1c\x82\xb9\xa8\x6d\xa7\xc1\x7e\x80\x5f\xd6\x50\x8f\x99\xcf\x51\xc7\xfe\x49" +
	"\xa9\xd3\x47\xfe\xf7\xd7\x46\x3d\x7d\x5e\xf0\xf4\xe6\xa8\xa9\xe1\x23\xc7\xaf\x4f\x7a\xfa\x3f\x4d\x9a\xfa\xf5\x49" +
	"\x4f\x9f\x0f\x99\x7a\x64\xd4\xd3\x88\x33\xb7\xcf\xff\x8b\x4a\xab\x5c\xff\xcf\x8e\xd9\xf3\xcb\x99\x7e\x7a\xb9\xb1" +
	"\x2f\x2e\xe2\xc5\x6b\xbc\x24\x14\x69\xcf\x2f\x21\xcc\x8b\x53\x7d\x31\xf4\x2f\xb6\xe7\x29\xe7\xaf\xfb\x39\x35\xc0" +
	"\xe2\x68\x05\x60\xa7\xc3\xd2\x84\x5a\x92\x20\x8e\xc5\x4a\x6c\xd8\xe3\x45\xeb\x3a\xa7\xed\xa7\x5a\x66\x52\x41\x31" +
	"\x11\xb0\x4d\xce\xa1\x27\xfa\xd1\x8d\x4d\x21\xd7\x9c\xd2\xf9\x53\xeb\x85\x8c\x62\x69\xb6\x11\x0c\x47\xd1\x10\xff" +
	"\xc8\x46\x50\x04\xa3\x4e\xf5\x93\xbf\xaf\x54\x3f\x35\x9c\x05\x63\xa4\x06\x68\x98\x34\xee\x09\x5f\xba\x01\xbf\x06" +
	"\xbd\xa9\xc6\x7c\x20\x46\xf4\x77\xbc\xe9\xea\x7d\x44\x4e\x6f\x21\x91\x28\xcd\x33\x7c\x16\xc9\x4c\xa9\x53\x21\x2a" +
	"\x8f\xa1\x7a\xd7\xb6\xe2\x78\x69\x57\x4f\x76\x00\xb6\x04\x49\xab\x81\xfd\x71\x56\xf6\x80\x2b\x16\x03\x50\x86\x81" +
	"\xff\xdb\x20\x72\x0a\x49\x90\xe1\x7e\xcd\xd4\xb9\xe9\xa8\x63\x2d\x0d\x22\x8b\xd0\x6c\xa8\x1f\xb9\xfa\x33\xd3\x45" +
	"\x4b\x0d\x70\xc5\xce\x6f\x58\xf7\xc8\x3e\xf2\x87\x53\x51\xae\xe9\x4e\x60\xa3\xe5\x0f\x24\xc5\xef\x77\xf7\xd7\xb9" +
	"\x34\x7b\x08\x27\x85\x44\x87\x58\x6c\xa9\xfa\xc4\x66\xab\x16\x5c\x70\x2a\xa5\x9c\x67\x51\xe6\x7c\xe8\xc7\x2c\x11" +
	"\x0f\xf1\x91\x5f\x9a\xe6\x23\x56\x9c\xf2\x69\xd4\x2c\x10\x6f\x9b\x2e\x4e\x0b\x5e\xf1\x40\x21\x3b\x92\x13\x1a\x4b" +
	"\xd9\xe1\x7b\x99\xe3\x18\x41\x5d\x36\xe9\xfd\x22\x40\x96\x8c\x77\x50\xe3\xee\xe8\x6b\xf3\xaa\x7b\xec\x63\xbb\x48" +
	"\x9f\xe8\xce\x73\x6a\x3d\x10\xc7\xbd\xdf\x8d\x9f\x03\x2c\x48\x33\x71\x62\x4b\xf5\xac\x74\x84\x12\x59\x07\x63\xa2" +
	"\x07\x09\x1a\x50\xcd\xfd\xd0\x24\x17\xea\xdd\x28\x1e\x9c\x74\x99\x71\x2a\x8a\x54\x90\x44\xe2\xbf\x06\x7f\x0e\x2a" +
	"\x1b\x51\x0a\x4d\x22\x70\x64\x46\xf4\xad\xb7\x81\x90\x75\xd0\xc3\xce\x7c\xa2\x7c\xa2\xef\x5b\x3a\x73\x64\xc8\xf3" +
	"\x85\x27\x4c\xc9\x79\xb9\xd5\x5b\xba\xb0\xad\x0e\x11\xd0\xab\xfc\x6b\x22\x1e\x40\x61\xc6\xfb\xdd\xf4\xa1\xf6\x8c" +
	"\x14\x80\x1e\x32\xa3\x08\x4d\x3e\x49\x70\x17\x40\x34\xae\x04\x5c\xf7\x4c\x09\x5a\xb0\xec\xb8\xcc\x73\x35\x5c\x5b" +
	"\x14\xe7\x43\x3d\x81\xee\x66\xd0\xcc\x87\x4a\x11\x4b\x7a\xa6\x6c\x64\x20\x43\x53\x6a\x34\x74\x0c\xd2\xdd\x06\x1b" +
	"\xb7\x68\x71\xf3\x92\x48\xb4\x9d\x2e\x81\x14\x9a\xec\x26\x4f\x81\xea\xe9\x8a\x61\xa8\xc7\x12\xc8\xaa\x82\xa0\x50" +
	"\xeb\x40\xb5\x61\x9c\xfe\xb6\x9b\x9f\xef\x78\xeb\x31\x73\x02\x4c\xd7\x96\xf3\xed\x9d\x0f\xd5\x5a\x31\xeb\x0a\xa7" +
	"\x3e\x54\x91\x0d\x03\xb0\x55\x55\x49\xf2\xbc\x86\x94\x0c\xa4\xde\xd7\xe4\x3d\x4d\xa1\x1b\xb8\x13\x9a\xb1\xba\x9a" +
	"\xb4\x8a\x8d\x50\x7f\x69\xae\x70\xd2\x06\x77\x52\x2d\xe1\xe2\x4a\x83\x39\x89\x85\xcc\x51\xfd\x76\x82\x4a\xae\xcd" +
	"\x44\x19\x0b\x4a\xdf\x26\x05\xa4\xa5\xa9\x50\x70\xfb\x41\x3d\x93\x38\xff\x11\x6f\x73\x3c\xeb\xfd\x6e\xfc\x06\x05" +
	"\x99\xd2\x1b\x72\x21\x8a\x1e\x32\x81\x78\x22\xb1\xb6\x93\x36\x26\x83\x78\xfc\x52\x60\x51\xf6\x62\x43\xf1\x1c\x44" +
	"\x65\x82\x38\x69\xec\x99\x46\x64\x20\x9c\x66\x2c\x84\x66\x00\x98\x5a\x32\x2d\x1e\x98\x42\xcb\x20\x2d\x06\x7a\x3e" +
	"\x9b\xe4\x0d\xb6\xf1\xd8\x27\x34\x72\x46\xd5\x20\xfd\x8d\xcf\x11\xca\xa0\x82\x04\x20\xb6\xd8\xea\xbc\xe2\xa0\xf0" +
	"\x6a\xef\xc6\x12\x3c\x60\xed\xf7\xfb\xdd\xf9\xab\x77\xbd\xe2\x6e\x9a\x6a\xd8\xd4\x70\x25\x24\xa4\xd2\x5b\x07\x6d" +
	"\x9c\xe6\xe5\xdc\x61\x5b\xe9\x9e\x21\x96\xf6\x28\x14\x93\xf2\x0c\xef\xb0\x31\x01\x7d\xef\x86\xf4\x99\xa1\x37\xc3" +
	"\xa9\x3b\xd7\xb6\xdf\xd4\x84\x5b\xa6\x88\x10\x2a\xf4\xd5\x49\x58\xf5\xb2\x42\x27\x18\x6d\x11\x05\x28\x44\x0f\x3f" +
	"\xd5\xb2\x6d\xe2\xc5\x82\x0b\x38\xa6\x89\x67\xca\x2f\xdf\xde\xf4\xf3\x8e\x37\x1d\x36\xe0\x6a\xd7\x01\x95\x62\x17" +
	"\x37\x8e\x79\x8c\x29\xa6\x0c\xf5\x47\x68\x6a\x19\x9c\x3c\x03\x43\x8f\xb4\x59\x84\x08\x88\x43\x36\x9e\x79\x62\x05" +
	"\x0e\x77\xce\x7c\x68\xbe\x2e\x96\x1f\x61\xa8\x8b\x08\x98\xe2\x2a\x3b\x91\x4b\xec\x3c\x2c\xc5\x95\xd6\xab\xf2\x8a" +
	"\xf4\xdf\x06\xc7\x6d\xd2\x7e\xad\x98\x7d\x61\x63\xab\x49\x88\x2b\x31\x69\xb3\xc0\x3f\xd0\x0f\x07\x62\xc5\xdb\x1e" +
	"\xbe\xde\xf1\xce\x6b\x02\x92\xfa\x4e\x89\x01\x10\xd9\x45\x11\x85\x94\xa4\x8b\x09\x01\xe4\x63\xa1\xd6\x15\x34\x0e" +
	"\x4f\xa4\x86\x23\xa0\x97\x0e\x6f\x27\x7f\x21\x2d\x00\xb3\x7b\x63\x68\xee\x31\x42\x5d\x82\xc5\x42\xe3\xa1\x91\x0e" +
	"\x21\xff\xe2\x57\xb9\xf1\x73\xb7\xd6\xe9\x5d\xa4\xab\x43\x2a\x6b\x84\xd1\x9b\x28\x3f\x50\x3e\x26\xb3\xb0\x16\x70" +
	"\xe7\x5e\xf4\xdf\xc0\x66\x39\x8d\x69\x6b\x3f\x30\x3f\xec\x3d\x43\x76\xea\x7c\xa4\x2e\x9e\x93\xc0\xf9\xea\xae\xa1" +
	"\x8e\x86\x94\x06\x6b\x92\x0c\xba\x46\x3f\x30\xad\x60\x7b\x87\x5d\x77\x9c\xc7\x3a\x5b\x08\x7e\x7b\xf7\x23\xa9\xcd" +
	"\xbc\xae\xdf\xf3\x67\x9d\x20\xd2\x90\x0f\xcb\x49\xd7\xe1\xfe\x4b\x6b\xbf\x18\x8d\x45\xe3\x03\x87\x8d\x34\xf5\x58" +
	"\x9a\x1b\x92\xa0\x54\xe7\x4d\xdc\x07\x06\x3d\xd4\x50\x41\x3d\xa0\x88\xfc\x99\x16\x4f\xea\x92\x8f\xa8\x90\xbf\xae" +
	"\x92\x7d\x4f\x1b\xaf\x0a\x6d\xb5\x5f\x22\x41\x0a\x1a\x3d\x1f\xca\xdd\x02\xc9\x47\xa2\x3d\xc9\xec\x6d\xc3\x2b\xd0" +
	"\x9c\xd5\x19\x88\x6b\xa7\xc4\xe8\x23\xd4\x49\xd3\xfc\x45\x1a\x76\x51\x26\x77\x00\xe8\xc6\x90\xe2\x04\xe2\x08\x61" +
	"\x6d\xa4\x8c\x35\x4a\x22\x14\xce\x47\x03\x00\xd4\xdd\x9e\xef\xbd\xb0\x16\x92\x02\x3b\x07\x5a\x98\xe3\x76\x0a\x7c" +
	"\xc9\x27\xc6\xd1\xeb\x21\x9a\x00\x89\xf2\x81\x2c\xee\xeb\x3a\xdd\xf7\xb4\xed\x71\xe8\x09\xa5\x22\x4e\xbf\x7a\xbe" +
	"\xb4\x71\x2d\x04\x56\x44\x3d\x6a\x22\xbd\xd4\x68\x19\x74\xce\xea\xa8\x9e\x09\x7e\x9f\x62\x97\x85\x54\xce\xe0\x99" +
	"\xdd\x2e\xd8\xbc\x0d\xb1\x0c\x0d\x21\xa3\x69\xae\x04\x9a\x27\x54\xaa\x71\x21\x3e\xcc\x40\x61\x0c\x41\x25\x07\x46" +
	"\xba\xea\x45\x59\x2c\x75\xd8\xce\xf8\x0a\x93\x4a\xf3\xa8\x88\x98\x22\xe5\x43\xd7\xed\x98\x2a\xf7\xe1\x95\x95\xe3" +
	"\x81\x71\xa8\xef\x18\xb1\xf3\x12\xb8\x25\x4d\xcc\xf3\x67\xc0\xf7\x01\x96\x8d\xd0\x68\x15\x95\x45\x71\xa3\x35\x0e" +
	"\x9e\xa6\xe6\x05\xa4\xa6\x9c\x6a\xab\x66\xbb\x28\x9e\x59\xc4\xdb\x50\xba\x41\x36\xed\xa2\x1f\x83\x7c\x7d\xa9\x90" +
	"\x9e\x22\x6f\x28\xe1\x00\xd4\x3f\x5b\x72\xe4\x8b\x4b\x02\x92\xa3\x7b\xe5\x51\x6f\x0a\xfa\x47\x25\x4d\x93\x6b\xa0" +
	"\x15\xc5\x23\x69\xd4\xdd\xe2\x1b\xd7\xba\x08\xce\x47\xf2\xb8\xaf\x0b\x96\xdf\xd3\xce\x4f\x4d\x75\x53\xb5\xc2\x55" +
	"\x3e\x42\xb7\x63\x02\x5d\xd9\x46\x60\xb7\x60\x28\x99\xea\xee\x4d\x42\x42\x34\xf4\xe7\xd2\xcc\x31\xba\x6e\x62\x44" +
	"\xed\x6a\xda\x47\x5d\xbf\x4a\xbf\xe8\x9c\x45\x78\x4d\xc3\x1d\x06\xe4\x05\x79\x44\x8d\x2d\x50\x90\x9b\x4e\x1e\x60" +
	"\x89\xde\x3c\xa2\xaf\xb0\x09\xa2\xb7\x05\x79\x27\xa3\x54\x00\x88\x49\x6e\xb7\x50\x08\x9c\x73\x69\xda\xa9\x5f\xf8" +
	"\xbb\x0b\xa6\xdf\xd3\xbe\x8f\xd4\xb4\x85\x43\x09\x28\xbd\x9e\x68\xa1\xae\x72\x6a\xca\x62\x06\x30\xeb\x1c\x4a\xa9" +
	"\x36\x26\x82\xae\x96\x24\x08\x0e\x40\xb3\xd5\x7a\x20\xaf\x4e\x69\xd8\x60\xcd\x00\xa2\x16\x0f\x9d\xa3\x86\x4e\xda" +
	"\x2c\x4d\xf3\xa5\xb5\xf5\xbc\x0a\x23\x29\xea\xd0\xd5\x3c\x84\x91\x2f\xee\x06\xd1\x1a\x49\x3a\xe4\x2b\x30\xa1\x08" +
	"\xbe\x20\xe9\xac\x21\x50\xaa\x5f\x4d\x69\x42\x21\x59\xb6\x7a\xa4\x54\xfe\x1d\x83\x76\x91\xc2\x50\xbe\x9c\xac\x59" +
	"\x84\x4d\x9a\xbb\x11\x0c\x8a\x5c\x12\x8f\x29\x58\x66\xd4\xb8\xfe\x3e\xd5\x04\x05\x4c\x55\x72\x55\x8a\x99\x52\xed" +
	"\x11\xa9\x53\x4b\x33\xe5\xfe\xd8\x64\x95\x4a\xa0\xf7\x4e\x48\x38\xaf\x45\xb0\x4e\xe7\x90\xa1\x8a\x58\x2c\x0a\x22" +
	"\x42\x54\x80\x81\xd4\x7c\x24\x75\xf9\xa6\x51\xa2\xc7\xd5\x15\x9d\x32\x09\xce\xac\x83\xe6\x44\x88\xd7\x7d\xa0\x83" +
	"\xf4\xd7\xb5\xe3\xef\x69\xe7\x17\xe5\xdb\x54\x00\x06\x36\x3b\xb8\x48\x27\x54\x53\xcf\xe3\x82\xcb\x4b\xa3\xcc\xe1" +
	"\xc5\xdb\x74\x1f\x92\x73\x87\xde\x56\x41\x9d\x4c\xc6\x0c\x8a\xc8\xd5\x45\xed\xb4\xe9\x0f\xc4\x49\x1a\xd2\xbb\x55" +
	"\xf5\x72\x1c\x25\x10\x69\x9d\x33\xfa\x55\xe0\x42\x01\xe3\x1d\xf6\xd5\xb1\xe0\x8e\x46\xa4\x60\xfe\x4a\x73\x97\x41" +
	"\x13\x96\xab\x01\x9b\x26\xf4\xe1\xfd\xaf\x96\x81\xfe\xf7\x17\xaf\xbf\xa7\x7d\x1f\x9a\x78\x89\x20\x41\x6a\xdd\xa4" +
	"\xcf\x1f\x8c\xe7\xc6\x60\x0a\x3d\xdf\x5b\xcd\xd7\x16\x3a\x50\x02\x6c\xd1\xef\x43\x22\xff\x83\xe9\x5c\xc8\x6e\xf6" +
	"\x02\x47\x5d\x57\x13\x8e\x36\xc9\x2e\xb5\x24\xd4\x9b\x4c\x10\xa3\x39\x69\x5f\xe0\xb4\xdf\xdc\x13\xa9\x1f\x71\x5f" +
	"\xa9\x84\x46\xad\xdf\xd5\x1f\x11\x78\x49\x72\x35\x68\x27\xce\x59\xd0\x50\xc2\xa5\xd6\xdf\x84\x99\x6e\xf9\x40\x42" +
	"\xf7\x8e\x51\x3b\xb5\x9c\x56\x2b\xe4\xf2\xab\x38\xaf\x2d\x7b\x90\xdf\xc1\xcf\x6f\x2a\x20\x87\x6a\xf3\x34\x3e\x9b" +
	"\xa1\xf0\x32\x00\x13\x35\x4e\x50\xc1\x59\x50\xde\x41\x50\x90\xbc\xbe\x18\xe8\x37\x37\x96\x80\x7c\xcf\xaa\xe0\x61" +
	"\x9c\xde\xdc\xa6\x14\x4e\xe5\x22\x8c\xc2\x55\xc7\x5c\x3a\x1f\x6d\x12\x8c\x99\xf8\x14\x46\xc3\x5a\x91\x0a\x5e\xed" +
	"\xa1\x96\x06\xe1\x3d\x7f\xd6\x3d\x6d\xaa\x0a\x31\xfc\x91\x22\xc3\x77\x0c\xdd\x2d\xc2\x2e\x35\xbf\xde\x30\x1e\x87" +
	"\xf9\x01\x07\xdc\x5a\xed\x53\x1c\x22\x65\xd2\xa8\x3b\x86\xc0\x1b\x6a\xcd\xe7\x91\x1a\x1a\x08\x14\x02\xc6\x69\xce" +
	"\x13\xa2\x74\xe1\x6d\xe8\x0e\x18\x47\x50\x29\x12\x28\x3a\x9c\x7a\x2a\xbc\x04\xb9\xa3\xb7\xda\xba\xba\x09\x72\x45" +
	"\xc9\xe0\x34\xb1\xd6\x44\x2c\x80\x10\xee\x44\x2c\x7c\x34\x7c\x42\xe3\x6b\xd4\x3f\xef\x88\xd8\xa5\x18\xf6\x3c\x32" +
	"\x5f\xe9\x1d\x63\x77\xbf\x38\x6b\x38\x78\x30\x8f\x24\xa0\xdf\x08\x28\x4f\x11\x77\x61\x33\x93\xc2\xb1\x21\x88\x5e" +
	"\x3d\x67\xa9\x5c\x12\x21\x3a\xa8\xfc\xb3\xc9\x18\xb8\x43\xc7\x12\x2b\xe4\x5e\x83\x66\x33\x6a\x48\x50\x07\x11\xd7" +
	"\x05\xc2\x42\xd6\xcd\x6b\x90\x2b\xd5\x04\x08\x33\x9c\x00\xdd\x9c\x98\xf2\x60\x77\x5c\xe2\xd0\xab\x7f\x82\xa4\xe1" +
	"\xbc\x33\xfc\x8f\x6d\x6a\xf0\xd5\x94\xe5\x08\xf9\xf1\xbd\x1f\x28\xed\x7e\xc7\x18\x9e\x90\x6e\x75\xb9\x0f\x28\x90" +
	"\x61\x12\x54\x3a\xc9\x10\x62\xaa\xd4\x98\x7d\xf5\x85\x17\xd7\x41\x63\x49\x86\xad\x2e\xf5\xd3\xc3\xc3\x1e\xcd\x58" +
	"\xa3\x9f\xa5\xf8\x1f\xd2\xfa\x63\x12\x96\x2f\x2a\xe4\x50\xf0\x0d\x0f\xd4\xdd\x30\x34\x67\x71\x5c\xe9\xdf\x44\xd1" +
	"\xba\x4c\x35\x5f\xf3\x10\x2b\xaa\x28\x20\x60\x6c\xa3\x44\x17\x13\x88\x60\xce\x52\x59\x29\x80\xde\xb0\x07\xec\xfd" +
	"\x3b\xc6\xef\x76\xd0\x46\x88\xa1\x06\x07\xa5\x71\xd2\x35\x6b\x52\x54\x71\x20\x36\x35\x84\x2a\x81\x6e\x35\x49\xad" +
	"\xb0\xfb\xa9\x82\x7f\x35\x82\xd2\x60\xd9\x4b\xf7\x42\x99\xe2\xd5\xdb\x01\x35\xff\x61\x98\xba\xd3\xc3\xc7\x34\x09" +
	"\x82\x79\x64\x3b\x48\xf3\x76\xaa\xeb\x82\xa8\x5c\x05\x7b\x88\x72\xd4\xd9\x71\x12\x13\x2c\x0c\x98\x99\x33\xec\xc6" +
	"\x35\xc6\x52\xbd\xbf\x20\xa1\xa7\x9a\x59\xa9\x5d\xe2\x03\x10\xde\xd7\xed\x1c\xde\xd3\xe6\xab\x8c\x6e\xc1\xbe\x2f" +
	"\xda\xfa\xc4\x35\x8e\x57\x43\x66\x4c\x9b\x89\x58\x9e\xbe\x23\x0c\x0b\x2a\x54\x3c\x89\x92\x2f\x99\xc7\x1a\x84\x4f" +
	"\x95\x6a\xa5\x87\xf8\xf6\xb9\x11\x63\x3c\x2c\x16\x80\xbf\x5a\x40\xc2\x05\x77\xd0\x4c\xd1\x5b\x95\xcc\xf4\xa2\x3c" +
	"\x05\xb5\x94\xd2\x05\xd8\x3d\x8e\x4a\xa5\x12\xfc\x92\x0d\xe8\x6f\x81\x01\xc3\x07\x5c\x95\xcc\x9a\xda\xf3\x79\x31" +
	"\x60\xff\xfc\xba\x7c\xe4\xe3\x87\xdf\x7d\xfc\xdb\xc7\xff\x15\x00\x00\xff\xff\xa9\xd8\xdb\x43\xd3\x9c\x00\x00")

func bindataTrainedwtsBytes() ([]byte, error) {
	return bindataRead(
		_bindataTrainedwts,
		"trained.wts",
	)
}



func bindataTrainedwts() (*asset, error) {
	bytes, err := bindataTrainedwtsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "trained.wts",
		size: 40147,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1600325958, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"twout_all.tsv": bindataTwoutalltsv,
	"twout_a.tsv":   bindataTwoutatsv,
	"twout_b.tsv":   bindataTwoutbtsv,
	"trained.wts":   bindataTrainedwts,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"trained.wts": {Func: bindataTrainedwts, Children: map[string]*bintree{}},
	"twout_a.tsv": {Func: bindataTwoutatsv, Children: map[string]*bintree{}},
	"twout_all.tsv": {Func: bindataTwoutalltsv, Children: map[string]*bintree{}},
	"twout_b.tsv": {Func: bindataTwoutbtsv, Children: map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
