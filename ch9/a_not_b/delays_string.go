// Code generated by "stringer -type=Delays"; DO NOT EDIT.

package main

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Delay3-0]
	_ = x[Delay5-1]
	_ = x[Delay1-2]
	_ = x[DelaysN-3]
}

const _Delays_name = "Delay3Delay5Delay1DelaysN"

var _Delays_index = [...]uint8{0, 6, 12, 18, 25}

func (i Delays) String() string {
	if i < 0 || i >= Delays(len(_Delays_index)-1) {
		return "Delays(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Delays_name[_Delays_index[i]:_Delays_index[i+1]]
}

func (i *Delays) FromString(s string) error {
	for j := 0; j < len(_Delays_index)-1; j++ {
		if s == _Delays_name[_Delays_index[j]:_Delays_index[j+1]] {
			*i = Delays(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Delays")
}
